var app=angular.module("autocomplete",[]);app.directive("autocomplete",function(){var e=0;return{restrict:"E",scope:{searchParam:"=ngModel",suggestions:"=data",onType:"=onType",onSelect:"=onSelect",autocompleteRequired:"="},controller:["$scope","$rootScope",function(e,t){e.selectedIndex=0,e.initLock=!0,e.setIndex=function(t){e.selectedIndex=parseInt(t)},this.setIndex=function(t){e.setIndex(t),e.$apply()},e.getIndex=function(n){return t.Index=e.selectedIndex,e.selectedIndex};var n=!0;e.completing=!1,e.$watch("searchParam",function(t,i){i===t||!i&&e.initLock||(n&&"undefined"!=typeof e.searchParam&&null!==e.searchParam&&(e.completing=!0,e.searchFilter=e.searchParam,e.selectedIndex=0),e.onType&&e.onType(e.searchParam))}),this.preSelect=function(t){n=!1,e.$apply(),n=!0},e.preSelect=this.preSelect,this.preSelectOff=function(){n=!0},e.preSelectOff=this.preSelectOff,e.select=function(t){t&&(e.searchParam=t,e.searchFilter=t,e.onSelect&&e.onSelect(t)),n=!1,e.completing=!1,setTimeout(function(){n=!0},1e3),e.setIndex(-1)},e.clearbtn=function(){e.searchParam="",t.clearbtnClicked=1},t.select=function(t){t&&(e.searchParam=t,e.searchFilter=t,e.onSelect&&e.onSelect(t)),n=!1,e.completing=!1,setTimeout(function(){n=!0},1e3),e.setIndex(-1)}}],link:function(t,n,i,s){setTimeout(function(){t.initLock=!1,t.$apply()},250);var l="";t.attrs={placeholder:"start typing...",class:"",id:"",inputclass:"",inputid:""};for(var c in i)l=c.replace("attr","").toLowerCase(),0===c.indexOf("attr")&&(t.attrs[l]=i[c]);i.clickActivation&&(n[0].onclick=function(e){t.searchParam||setTimeout(function(){t.completing=!0,t.$apply()},200)});var a={left:37,up:38,right:39,down:40,enter:13,esc:27,tab:9};n[0].addEventListener("mousedown",function(e){t.getIndex()}),document.addEventListener("keydown",function(e){var n=e.keyCode||e.which;switch(n){case a.esc:t.select(),t.setIndex(-1),t.$apply(),e.preventDefault()}},!0),document.addEventListener("blur",function(e){setTimeout(function(){t.select(),t.setIndex(-1),t.$apply()},150)},!0),n[0].addEventListener("keydown",function(n){var i=n.keyCode||n.which,s=angular.element(this).find("li").length;if(t.completing&&0!=s)switch(i){case a.up:if(e=t.getIndex()-1,e<-1)e=s-1;else if(e>=s){e=-1,t.setIndex(e),t.preSelectOff();break}t.setIndex(e),e!==-1&&t.preSelect(angular.element(angular.element(this).find("li")[e]).text()),t.$apply();break;case a.down:if(e=t.getIndex()+1,e<-1)e=s-1;else if(e>=s){e=-1,t.setIndex(e),t.preSelectOff(),t.$apply();break}t.setIndex(e),e!==-1&&t.preSelect(angular.element(angular.element(this).find("li")[e]).text());break;case a.left:break;case a.right:case a.enter:case a.tab:e=t.getIndex(),e!==-1&&t.suggestions.length>0?(t.select(angular.element(angular.element(this).find("li")[e]).text()),i===a.enter&&n.preventDefault()):i===a.enter&&t.select(),t.setIndex(-1),t.$apply();break;case a.esc:t.select(),t.setIndex(-1),t.$apply(),n.preventDefault();break;default:return}})},template:'          <div class="autocomplete {{ attrs.class }}" id="{{ attrs.id }}">          <input            type="text"            ng-model="searchParam"            placeholder="{{ attrs.placeholder }}"            class="{{ attrs.inputclass }}"            id="{{ attrs.inputid }}"            autocomplete="off"            onClick="this.select();"            ng-required="{{ autocompleteRequired }}" />            <button ng-if="searchParam.length>2" class="close-icon fa fa-times-circle" ng-click="clearbtn()"></button>          <ul ng-show="completing && (suggestions | filter:searchFilter).length > 0 && $root.userNowTypingLocation!=1 && $root.gotLocResponse==1 ">            <li              suggestion              ng-repeat="suggestion in suggestions | filter:searchFilter track by $index"              index="{{ $index }}"              val="{{ suggestion }}"              ng-class="{ active: ($index === selectedIndex) }"              ng-click="select(suggestion)"              ng-bind-html="suggestion | highlight:searchParam">              </li>          </ul>          <ul ng-if="$root.gotLocResponse==0 && searchParam.length>0" ng-show="completing">          <div class="coverScreen" ><div class="showbox"><div class="loader"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div></div></div>            </ul>          <ul ng-if="$root.gotDishResponse==0 && searchParam.length>0" ng-show="completing">          <div class="coverScreen" ><div class="showbox"><div class="loader"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div></div></div>            </ul>          <ul ng-show="completing && $root.noResult==1 && searchParam.length>2 && suggestions.length==0 && $root.userNowTypingLocation!=1  ">            <li              val="{{ suggestion }}">No Result Found</li>            </ul>          <ul ng-show="completing && (suggestions | filter:searchFilter).length > 0 && ($root.dishSuggestionsTypeName.length!=0) && $root.userNowTypingDish!=1 && $root.gotDishResponse==1">              <li                suggestion                ng-repeat="suggestion in suggestions | filter:searchFilter track by $index"                index="{{ $index }}"                val="{{ suggestion }}"                ng-class="{ active: ($index === selectedIndex) }"                ng-click="select(suggestion)"                >                  <span ng-bind-html="suggestion | dishhighlight:searchParam:$root.dishSuggestionsTypeName[$index]"></span>              </li>          </ul>        </div>        '}}),app.filter("highlight",["$sce",function(e){return function(t,n){if("function"==typeof t)return"";if(n){var i="("+n.split(/\ /).join(" |")+"|"+n.split(/\ /).join("|")+")",s=new RegExp(i,"gi");i.length&&(t=t.replace(s,'<span class="highlight">$1</span>'))}return e.trustAsHtml(t)}}]),app.filter("dishhighlight",["$sce",function(e){return function(t,n,i){if("function"==typeof t)return"";if(n){var s="("+n.split(/\ /).join(" |")+"|"+n.split(/\ /).join("|")+")",l=new RegExp(s,"gi");s.length&&(t=t.replace(l,'<span class="dishhighlight">$1</span>'))}return void 0!=i&&(t=t+'<span class="tags">'+i+"</span>"),e.trustAsHtml(t)}}]),app.directive("suggestion",function(){return{restrict:"A",require:"^autocomplete",link:function(e,t,n,i){t.bind("mouseenter",function(){i.preSelect(n.val),i.setIndex(n.index)}),t.bind("mouseleave",function(){i.preSelectOff()})}}});